/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com_jFream;

import com_class.DBClass;
import com_class.Universal;
import static com_jFream.supplier.supId;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class customer extends javax.swing.JFrame {

    static Universal u = new Universal();
    public static String cusID;

    /**
     * Creates new form customer
     */
    public customer() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jScrollPane_customer_nic.setVisible(false);
        addTotableSearCustomer();
        jcheckbox_customer.setVisible(true);
        u.imageMethod("/img/2222.jpg", jLabel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        customer_b_new = new javax.swing.JButton();
        login_la_cloce = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        jScrollPane_customer_nic = new javax.swing.JScrollPane();
        jList_customer_nic = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        customer_b_enter = new javax.swing.JButton();
        tx_supplier_gmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        customer_b_delete = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_customer = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        tx_customer_last_name = new javax.swing.JTextField();
        tx_customer_nic = new javax.swing.JTextField();
        customer_b_update = new javax.swing.JButton();
        tx_customer_contact_number = new javax.swing.JTextField();
        jcheckbox_customer = new javax.swing.JCheckBox();
        customer_b_search = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tx_customer_first_name = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jRadioButton_male = new javax.swing.JRadioButton();
        jRadioButton_female = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1361, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1361, 768));
        getContentPane().setLayout(null);

        customer_b_new.setBackground(new java.awt.Color(255, 255, 255));
        customer_b_new.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customer_b_new.setForeground(new java.awt.Color(0, 0, 0));
        customer_b_new.setText("New");
        customer_b_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customer_b_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customer_b_newMouseExited(evt);
            }
        });
        customer_b_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_b_newActionPerformed(evt);
            }
        });
        getContentPane().add(customer_b_new);
        customer_b_new.setBounds(1100, 360, 180, 45);

        login_la_cloce.setBackground(new java.awt.Color(102, 204, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.setText("X");
        login_la_cloce.setOpaque(true);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 5, 30, 30);

        login_la_mini.setBackground(new java.awt.Color(102, 204, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.setText("-");
        login_la_mini.setOpaque(true);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1300, 5, 30, 30);

        jList_customer_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_customer_nicKeyPressed(evt);
            }
        });
        jScrollPane_customer_nic.setViewportView(jList_customer_nic);

        getContentPane().add(jScrollPane_customer_nic);
        jScrollPane_customer_nic.setBounds(180, 150, 460, 131);

        jLabel2.setBackground(new java.awt.Color(102, 204, 255));
        jLabel2.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CUSTOMER");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1360, 40);

        customer_b_enter.setBackground(new java.awt.Color(255, 255, 255));
        customer_b_enter.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customer_b_enter.setForeground(new java.awt.Color(0, 0, 0));
        customer_b_enter.setText("Enter");
        customer_b_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customer_b_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customer_b_enterMouseExited(evt);
            }
        });
        customer_b_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_b_enterActionPerformed(evt);
            }
        });
        getContentPane().add(customer_b_enter);
        customer_b_enter.setBounds(840, 360, 180, 45);

        tx_supplier_gmail.setBackground(new java.awt.Color(255, 255, 255));
        tx_supplier_gmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_supplier_gmail.setForeground(new java.awt.Color(0, 0, 0));
        tx_supplier_gmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_supplier_gmailKeyPressed(evt);
            }
        });
        getContentPane().add(tx_supplier_gmail);
        tx_supplier_gmail.setBounds(180, 230, 460, 35);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contact Number");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(700, 110, 140, 25);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 360, 10, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 340, 1360, 10);

        customer_b_delete.setBackground(new java.awt.Color(255, 255, 255));
        customer_b_delete.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customer_b_delete.setForeground(new java.awt.Color(0, 0, 0));
        customer_b_delete.setText("Delete");
        customer_b_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customer_b_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customer_b_deleteMouseExited(evt);
            }
        });
        customer_b_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_b_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(customer_b_delete);
        customer_b_delete.setBounds(580, 360, 180, 45);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 40, 1360, 10);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Active OR Inactive");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 290, 140, 25);

        jtable_customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "First Name", "Last Name", "Gender", "Contact Number", "Mail", "IsActive"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable_customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_customerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtable_customer);
        if (jtable_customer.getColumnModel().getColumnCount() > 0) {
            jtable_customer.getColumnModel().getColumn(0).setMinWidth(150);
            jtable_customer.getColumnModel().getColumn(0).setPreferredWidth(150);
            jtable_customer.getColumnModel().getColumn(0).setMaxWidth(150);
            jtable_customer.getColumnModel().getColumn(1).setMinWidth(200);
            jtable_customer.getColumnModel().getColumn(1).setPreferredWidth(200);
            jtable_customer.getColumnModel().getColumn(1).setMaxWidth(200);
            jtable_customer.getColumnModel().getColumn(2).setMinWidth(200);
            jtable_customer.getColumnModel().getColumn(2).setPreferredWidth(200);
            jtable_customer.getColumnModel().getColumn(2).setMaxWidth(200);
            jtable_customer.getColumnModel().getColumn(3).setMinWidth(70);
            jtable_customer.getColumnModel().getColumn(3).setPreferredWidth(70);
            jtable_customer.getColumnModel().getColumn(3).setMaxWidth(70);
            jtable_customer.getColumnModel().getColumn(4).setMinWidth(170);
            jtable_customer.getColumnModel().getColumn(4).setPreferredWidth(170);
            jtable_customer.getColumnModel().getColumn(4).setMaxWidth(170);
            jtable_customer.getColumnModel().getColumn(5).setMinWidth(250);
            jtable_customer.getColumnModel().getColumn(5).setPreferredWidth(250);
            jtable_customer.getColumnModel().getColumn(5).setMaxWidth(250);
            jtable_customer.getColumnModel().getColumn(6).setMinWidth(60);
            jtable_customer.getColumnModel().getColumn(6).setPreferredWidth(60);
            jtable_customer.getColumnModel().getColumn(6).setMaxWidth(60);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(120, 450, 1100, 300);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(540, 360, 10, 30);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(800, 360, 10, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("NIC Number");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(40, 110, 140, 25);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(1060, 360, 10, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Mail");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(40, 230, 140, 25);

        tx_customer_last_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_customer_last_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_customer_last_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_customer_last_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_customer_last_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_customer_last_name);
        tx_customer_last_name.setBounds(840, 170, 460, 35);

        tx_customer_nic.setBackground(new java.awt.Color(255, 255, 255));
        tx_customer_nic.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_customer_nic.setForeground(new java.awt.Color(0, 0, 0));
        tx_customer_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_customer_nicActionPerformed(evt);
            }
        });
        tx_customer_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_customer_nicKeyPressed(evt);
            }
        });
        getContentPane().add(tx_customer_nic);
        tx_customer_nic.setBounds(180, 110, 460, 35);

        customer_b_update.setBackground(new java.awt.Color(255, 255, 255));
        customer_b_update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customer_b_update.setForeground(new java.awt.Color(0, 0, 0));
        customer_b_update.setText("Update");
        customer_b_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customer_b_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customer_b_updateMouseExited(evt);
            }
        });
        customer_b_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_b_updateActionPerformed(evt);
            }
        });
        getContentPane().add(customer_b_update);
        customer_b_update.setBounds(320, 360, 180, 45);

        tx_customer_contact_number.setBackground(new java.awt.Color(255, 255, 255));
        tx_customer_contact_number.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_customer_contact_number.setForeground(new java.awt.Color(0, 0, 0));
        tx_customer_contact_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_customer_contact_numberKeyPressed(evt);
            }
        });
        getContentPane().add(tx_customer_contact_number);
        tx_customer_contact_number.setBounds(840, 110, 460, 35);

        jcheckbox_customer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcheckbox_customerKeyPressed(evt);
            }
        });
        getContentPane().add(jcheckbox_customer);
        jcheckbox_customer.setBounds(180, 290, 40, 24);

        customer_b_search.setBackground(new java.awt.Color(255, 255, 255));
        customer_b_search.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customer_b_search.setForeground(new java.awt.Color(0, 0, 0));
        customer_b_search.setText("Search");
        customer_b_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customer_b_searchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customer_b_searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customer_b_searchMouseExited(evt);
            }
        });
        customer_b_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_b_searchActionPerformed(evt);
            }
        });
        getContentPane().add(customer_b_search);
        customer_b_search.setBounds(60, 360, 180, 45);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Gender");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(700, 230, 140, 25);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("First Name");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 170, 140, 25);

        tx_customer_first_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_customer_first_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_customer_first_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_customer_first_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_customer_first_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_customer_first_name);
        tx_customer_first_name.setBounds(180, 170, 460, 35);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Last Name");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(700, 170, 140, 25);

        jRadioButton_male.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup1.add(jRadioButton_male);
        jRadioButton_male.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton_male.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton_male.setText("Male");
        getContentPane().add(jRadioButton_male);
        jRadioButton_male.setBounds(840, 230, 66, 28);

        jRadioButton_female.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup1.add(jRadioButton_female);
        jRadioButton_female.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton_female.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton_female.setText("Female");
        getContentPane().add(jRadioButton_female);
        jRadioButton_female.setBounds(990, 230, 83, 28);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 40, 1370, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customer_b_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_newMouseEntered
        buttonMouseEnEx(customer_b_new, 0);
    }//GEN-LAST:event_customer_b_newMouseEntered

    private void customer_b_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_newMouseExited
        buttonMouseEnEx(customer_b_new, 1);
    }//GEN-LAST:event_customer_b_newMouseExited

    private void customer_b_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_b_newActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want add new Supplier ?", "Add New One", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearemployeeFields();
            addTotableSearCustomer();
            tx_customer_nic.grabFocus();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
        customer_b_new.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_customer_b_newActionPerformed

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        login_la_mini.setBackground(Color.gray);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        login_la_mini.setBackground(new Color(102, 204, 255));
    }//GEN-LAST:event_login_la_miniMouseExited

    private void customer_b_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_enterMouseEntered
        buttonMouseEnEx(customer_b_enter, 0);
    }//GEN-LAST:event_customer_b_enterMouseEntered

    private void customer_b_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_enterMouseExited
        buttonMouseEnEx(customer_b_enter, 1);
    }//GEN-LAST:event_customer_b_enterMouseExited

    private void customer_b_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_b_enterActionPerformed
        if (tx_customer_nic.getText().trim().isEmpty()) {
            tx_customer_nic.grabFocus();
        } else if (tx_customer_contact_number.getText().trim().isEmpty()) {
            tx_customer_contact_number.grabFocus();
        } else if (tx_supplier_gmail.getText().trim().isEmpty()) {
            tx_supplier_gmail.grabFocus();
        } else if (tx_customer_last_name.getText().trim().isEmpty()) {
            tx_customer_last_name.grabFocus();
        } else if (!(tx_customer_last_name.getText().trim().isEmpty() & tx_customer_contact_number.getText().trim().isEmpty() & tx_supplier_gmail.getText().trim().isEmpty()
                & tx_customer_nic.getText().trim().isEmpty())) {
            addToTable();
        }
        customer_b_enter.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_customer_b_enterActionPerformed

    private void tx_supplier_gmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_supplier_gmailKeyPressed

        TXValidaton(evt, tx_supplier_gmail, 70, "NA");
        if (evt.getKeyCode() == 10) {
            if (!tx_supplier_gmail.getText().trim().isEmpty()) {
                tx_customer_last_name.grabFocus();
            } else {
                tx_supplier_gmail.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_supplier_gmailKeyPressed

    private void jList_customer_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_customer_nicKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList_customer_nic.isSelectionEmpty()) {
                tx_customer_nic.setText(jList_customer_nic.getSelectedValue().toString());
                jScrollPane_customer_nic.setVisible(false);
                tx_customer_contact_number.grabFocus();
            }
        }
    }//GEN-LAST:event_jList_customer_nicKeyPressed

    private void customer_b_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_deleteMouseEntered
        buttonMouseEnEx(customer_b_delete, 0);
    }//GEN-LAST:event_customer_b_deleteMouseEntered

    private void customer_b_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_deleteMouseExited
        buttonMouseEnEx(customer_b_delete, 1);
    }//GEN-LAST:event_customer_b_deleteMouseExited

    private void customer_b_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_b_deleteActionPerformed

        if (!(tx_customer_last_name.getText().trim().isEmpty() & tx_customer_contact_number.getText().trim().isEmpty() & tx_supplier_gmail.getText().trim().isEmpty()
                & tx_customer_nic.getText().trim().isEmpty())) {
            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete this supplier ?", "Exit Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                jcheckbox_customer.setSelected(false);
                updateDelete("delete");
                JOptionPane.showConfirmDialog(this, "Supplier Deleted ?", "Delete", JOptionPane.OK_OPTION);
                addTotableSearCustomer();
                clearemployeeFields();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } else {
            JOptionPane.showConfirmDialog(this, "Fill the details ?", "NOT Complet", JOptionPane.OK_OPTION);
        }
        customer_b_delete.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_customer_b_deleteActionPerformed

    private void jtable_customerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_customerMouseClicked
        DefaultTableModel tlModel = (DefaultTableModel) jtable_customer.getModel();
        cusID = tlModel.getValueAt(jtable_customer.getSelectedRow(), 0).toString();
        String t_fname = tlModel.getValueAt(jtable_customer.getSelectedRow(), 1).toString();
        String t_lname = tlModel.getValueAt(jtable_customer.getSelectedRow(), 2).toString();
        String t_gender = tlModel.getValueAt(jtable_customer.getSelectedRow(), 3).toString();
        String t_tel = tlModel.getValueAt(jtable_customer.getSelectedRow(), 4).toString();
        String t_gmail = tlModel.getValueAt(jtable_customer.getSelectedRow(), 5).toString();
        String t_isactive = tlModel.getValueAt(jtable_customer.getSelectedRow(), 6).toString();

        tx_customer_nic.setText(cusID);
        tx_customer_first_name.setText(t_fname);
        tx_customer_last_name.setText(t_lname);
       if(t_gender.equals("M")){
           jRadioButton_male.setSelected(true);
       }else{
           jRadioButton_female.setSelected(true);
       }
        tx_customer_contact_number.setText(t_tel);
        tx_supplier_gmail.setText(t_gmail);
        
        if (t_isactive.equals("Active")) {
            jcheckbox_customer.setSelected(true);
        } else {
            jcheckbox_customer.setSelected(false);
        }
    }//GEN-LAST:event_jtable_customerMouseClicked

    private void tx_customer_last_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_customer_last_nameKeyPressed
        TXValidaton(evt, tx_customer_last_name, 70, "NA");
        if (evt.getKeyCode() == 10) {
            if (!tx_customer_last_name.getText().isEmpty()) {
                jcheckbox_customer.setSelected(true);
                customer_b_enter.doClick();
                buttonMouseEnEx(customer_b_enter, 0);
            } else {
                tx_customer_last_name.grabFocus();
            }
            buttonMouseEnEx(customer_b_enter, 1);
        }

    }//GEN-LAST:event_tx_customer_last_nameKeyPressed

    private void tx_customer_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_customer_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_customer_nicActionPerformed

    private void tx_customer_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_customer_nicKeyPressed
        if (tx_customer_nic.getText().isEmpty()) {
            addTotableSearCustomer();
        } else {
            TXValidaton(evt, tx_customer_nic, 12, "NV");

            if (evt.getKeyCode() == 10) {
                if (!tx_customer_nic.getText().isEmpty()) {
                    tx_customer_contact_number.grabFocus();
                } else {
                    tx_customer_nic.grabFocus();
                }
            }

            if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
                jList_customer_nic.grabFocus();
                jList_customer_nic.setSelectedIndex(0);
                jScrollPane_customer_nic.setVisible(true);
            } else if (!(tx_customer_nic.getText().trim().isEmpty())) {
                searchANDListCustomer("supplier", "name", tx_customer_nic.getText(), jList_customer_nic);
            }
        }
    }//GEN-LAST:event_tx_customer_nicKeyPressed

    private void customer_b_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_updateMouseEntered
        buttonMouseEnEx(customer_b_update, 0);
    }//GEN-LAST:event_customer_b_updateMouseEntered

    private void customer_b_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_updateMouseExited
        buttonMouseEnEx(customer_b_update, 1);
    }//GEN-LAST:event_customer_b_updateMouseExited

    private void customer_b_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_b_updateActionPerformed
        if (tx_customer_nic.getText().trim().isEmpty()) {
            tx_customer_nic.grabFocus();
        } else if (tx_customer_contact_number.getText().trim().isEmpty()) {
            tx_customer_contact_number.grabFocus();
        } else if (tx_supplier_gmail.getText().trim().isEmpty()) {
            tx_supplier_gmail.grabFocus();
        } else if (tx_customer_last_name.getText().trim().isEmpty()) {
            tx_customer_last_name.grabFocus();
        } else if (!(tx_customer_last_name.getText().trim().isEmpty() & tx_customer_contact_number.getText().trim().isEmpty() & tx_supplier_gmail.getText().trim().isEmpty()
                & tx_customer_nic.getText().trim().isEmpty())) {
            updateDelete("update");
        }
        customer_b_update.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_customer_b_updateActionPerformed

    private void tx_customer_contact_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_customer_contact_numberKeyPressed
        TXValidaton(evt, tx_customer_contact_number, 11, "N");
        if (evt.getKeyCode() == 10) {
            if (!tx_customer_contact_number.getText().isEmpty()) {
                tx_supplier_gmail.grabFocus();
            } else {
                tx_customer_contact_number.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_customer_contact_numberKeyPressed

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        login_la_cloce.setBackground(Color.red);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        login_la_cloce.setBackground(new Color(102, 204, 255));
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void jcheckbox_customerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcheckbox_customerKeyPressed
        if (evt.getKeyCode() == 10) {
            customer_b_enter.doClick();
            buttonMouseEnEx(customer_b_enter, 0);
        }
    }//GEN-LAST:event_jcheckbox_customerKeyPressed

    private void customer_b_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_searchMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_b_searchMouseClicked

    private void customer_b_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_searchMouseEntered
        buttonMouseEnEx(customer_b_search, 0);
    }//GEN-LAST:event_customer_b_searchMouseEntered

    private void customer_b_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_b_searchMouseExited
        buttonMouseEnEx(customer_b_search, 1);
    }//GEN-LAST:event_customer_b_searchMouseExited

    private void customer_b_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_b_searchActionPerformed
        if (!tx_customer_nic.getText().trim().isEmpty()) {
            addTotableSearCustomerSearchNIC(tx_customer_nic.getText());
        } else {
            tx_customer_nic.grabFocus();
        }
        customer_b_search.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_customer_b_searchActionPerformed

    private void tx_customer_first_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_customer_first_nameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_customer_first_nameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton customer_b_delete;
    private javax.swing.JButton customer_b_enter;
    private javax.swing.JButton customer_b_new;
    private javax.swing.JButton customer_b_search;
    private javax.swing.JButton customer_b_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList_customer_nic;
    private javax.swing.JRadioButton jRadioButton_female;
    private javax.swing.JRadioButton jRadioButton_male;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_customer_nic;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JCheckBox jcheckbox_customer;
    private javax.swing.JTable jtable_customer;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JTextField tx_customer_contact_number;
    private javax.swing.JTextField tx_customer_first_name;
    private javax.swing.JTextField tx_customer_last_name;
    private javax.swing.JTextField tx_customer_nic;
    private javax.swing.JTextField tx_supplier_gmail;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static customer log = new customer();

    public static customer getLoginInstance() {
        return log;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> TXValidaton()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt//JTextField txName//int lenth//String type
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> TXValidaton open <<<<<<<<<<<   
    private void TXValidaton(KeyEvent evt, JTextField txName, int lenth, String type) {
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenth) {
            if (type.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8) | (iNumber == 17) | (iNumber == 86)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (type.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46) | (iNumber == 17)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (type.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> TXValidaton close <<<<<<<<<<<       
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> clearemployeeFields()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> 
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> clearemployeeFields cloce <<<<<<<<<<<        
    private void clearemployeeFields() {
        tx_customer_nic.setText(null);
        tx_customer_first_name.setText(null);
        tx_customer_last_name.setText(null);
        tx_supplier_gmail.setText(null);
        tx_customer_contact_number.setText(null);
        jcheckbox_customer.setSelected(false);
        buttonGroup1.clearSelection();
        cusID = null;
        tx_customer_nic.grabFocus();
    }
    //>>>>>>>>> clearemployeeFields close <<<<<<<<<<<       
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System open <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close Employee Interface ?", "Exit Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(255, 255, 255));
        }
    }
    //>>>>>>>>> System close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> buttonMouseEnEx()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> JButton buttonName, int x
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> buttonMouseEnEx open <<<<<<<<<<<    
    private void buttonMouseEnEx(JButton buttonName, int x) {
        if (x == 0) {
            buttonName.setBackground(new Color(84, 245, 214));
        } else {
            buttonName.setBackground(new Color(225, 225, 225));
        }
    }
    //>>>>>>>>> buttonMouseEnEx close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> addToTable()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> 
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> addToTable open <<<<<<<<<<<        
    private void addToTable() {
        try {
            String nic = tx_customer_nic.getText();
            String fname = tx_customer_first_name.getText();
            String lname = tx_customer_last_name.getText();
            String tell = tx_customer_contact_number.getText();
            String gmail = tx_supplier_gmail.getText();
            String gender = (jRadioButton_male.isSelected()) ? "M" : "F";
            boolean b = jcheckbox_customer.isSelected();
            int bb = 1;
            if (b == false) {
                bb = 0;
            }
            DBClass.putData("insert into customer (idcustomer,f_name,l_name,gender,tell,gmail,status) values('" + nic + "' , '" + fname + "' , '" + lname + "' ,'" + gender + "','" + tell + "'  ,'" + gmail + "' ,'" + bb + "')");
            clearemployeeFields();
            addTotableSearCustomer();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Bug Error CustomerTableInsert !!! \n addToTable() \n" + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> addToTable close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> addTotableSearCustomer()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> 
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> addTotableSearCustomer open <<<<<<<<<<<        
    private void addTotableSearCustomer() {
        try {
            ResultSet rs = DBClass.getData("select * from customer order by idcustomer");
            DefaultTableModel dm = (DefaultTableModel) jtable_customer.getModel();
            dm.setRowCount(0);
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("idcustomer"));
                    v.add(rs.getString("f_name"));
                    v.add(rs.getString("l_name"));
                    v.add(rs.getString("gender"));
                    v.add(rs.getString("tell"));
                   v.add(rs.getString("gmail"));
                    if (rs.getInt("status") == 1) {
                        v.add("Active");
                        dm.addRow(v);
                    } else if (rs.getInt("status") == 0) {
                        v.add("Inactive");
                        dm.addRow(v);
                    }
                }
            }

        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(this, "Customer Table Error ::\n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Customer Table Error ::\n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> addTotableSearCustomer close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> searchANDListCustomer()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> String customer, String name, String text, JList jList_customer_nic
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> searchANDListCustomer open <<<<<<<<<<<        
    private void searchANDListCustomer(String customer, String name, String text, JList jList_customer_nic) {
        try {
            DBClass.getData("select " + name + " from " + customer + " where " + name + " like '" + text + "%' order by " + name);
            Vector v = new Vector();
            jList_customer_nic.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString(name));
                    jList_customer_nic.setListData(v);
                }
            } else {
                jList_customer_nic.setListData(v);
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> searchANDListCustomer close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> addTotableSearCustomerSearchNIC()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> String nic
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> addTotableSearCustomerSearchNIC open <<<<<<<<<<<        
    private void addTotableSearCustomerSearchNIC(String nic) {
        try {
            ResultSet rs = DBClass.getData("select * from customer where idcustomer='" + nic + "' order by name");
            DefaultTableModel dm = (DefaultTableModel) jtable_customer.getModel();
            dm.setRowCount(0);
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("idcustomer"));
                    v.add(rs.getString("f_name"));
                    v.add(rs.getString("l_name"));
                    v.add(rs.getString("gender"));
                    v.add(rs.getString("tell"));
                    v.add(rs.getString("gmail"));
                    if (rs.getInt("status") == 1) {
                        v.add("Active");
                        dm.addRow(v);
                    } else if (rs.getInt("status") == 0) {
                        v.add("Inactive");
                        dm.addRow(v);
                    }
                }
            }

        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(this, "Customer Table Error ::\n" + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Customer Table Error ::\n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> addTotableSearCustomerSearchNIC close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> updateDelete()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> 
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> updateDelete open <<<<<<<<<<<        
    private void updateDelete(String qurName) {
        String nic = tx_customer_nic.getText();
        String fname = tx_customer_first_name.getText();
        String lname = tx_customer_last_name.getText();
        String tell = tx_customer_contact_number.getText();
        String gmail = tx_supplier_gmail.getText();
        String gender = (jRadioButton_male.isSelected()) ? "M" : "F";
        boolean b = jcheckbox_customer.isSelected();
        int bb = 1;
        if (b == false) {
            bb = 0;
        }
        try {
            if (qurName.equals("update")) {
                DBClass.putData("update customer set idcustomer='" + nic + "', f_name='" + fname + "', l_name='" + lname + "',gender='" + gender + "',tell='" + tell + "',gmail='" + gmail + "',status ='" + bb + "' where  idsupplier ='" + supId + "' ");
            } else if (qurName.equals("delete")) {
                DBClass.putData("update customer set idcustomer='" + nic + "', f_name='" + fname + "', l_name='" + lname + "',gender='" + gender + "',tell='" + tell + "',gmail='" + gmail + "',status ='2' where  idsupplier ='" + supId + "' ");
            }
            clearemployeeFields();
            addTotableSearCustomer();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Bug Error supplierTableUpdate !!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> updateDelete close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
}
