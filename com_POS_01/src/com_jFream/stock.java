/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com_jFream;

import com_class.DBClass;
import com_class.Universal;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class stock extends javax.swing.JFrame {
static Universal u = new Universal();
public static String itemI;
    /**
     * Creates new form stock
     */
    public stock() {
        initComponents();
        SearchStockTotable();
        u.imageMethod("/img/2222.jpg", jLabel1);
        jScrollPane_item_name.setVisible(false);
        tx_stock_item_name.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login_la_mini = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        tx_stock_item_name = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        stock_b_search = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_stock = new javax.swing.JTable();
        jScrollPane_item_name = new javax.swing.JScrollPane();
        jList_item_name = new javax.swing.JList();
        tx_stock_item_id = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tx_stock_supplier_id = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tx_stock_item_description = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tx_stock_supplier_name = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tx_stock_supplier_contact_number = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tx_stock_qty = new javax.swing.JTextField();
        tx_stock_sell_price = new javax.swing.JTextField();
        tx_stock_buying_price = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        tx_stock_is_active = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tx_stock_stock_id = new javax.swing.JTextField();
        item_b_new = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1378, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1378, 768));
        getContentPane().setLayout(null);

        login_la_mini.setBackground(new java.awt.Color(102, 204, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.setText("-");
        login_la_mini.setOpaque(true);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1300, 5, 30, 30);

        login_la_cloce.setBackground(new java.awt.Color(102, 204, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.setText("X");
        login_la_cloce.setOpaque(true);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 5, 30, 30);

        tx_stock_item_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_item_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_item_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_item_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_item_nameActionPerformed(evt);
            }
        });
        tx_stock_item_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_item_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_item_name);
        tx_stock_item_name.setBounds(120, 190, 260, 35);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("item Name");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 200, 110, 25);

        stock_b_search.setBackground(new java.awt.Color(255, 255, 255));
        stock_b_search.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        stock_b_search.setForeground(new java.awt.Color(0, 0, 0));
        stock_b_search.setText("Search");
        stock_b_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stock_b_searchMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stock_b_searchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stock_b_searchMouseEntered(evt);
            }
        });
        stock_b_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_b_searchActionPerformed(evt);
            }
        });
        getContentPane().add(stock_b_search);
        stock_b_search.setBounds(330, 380, 180, 45);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(850, 380, 10, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 370, 1360, 10);

        jLabel2.setBackground(new java.awt.Color(102, 204, 255));
        jLabel2.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("STOCK");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1360, 40);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(900, 70, 10, 280);

        jtable_stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock ID", "Item ID", "Item Name", "Description", "Supplier Id", "Supplier Name", "Supplier Contact Number", "QTY", "Buying Price", "Sell Price", "Is Active"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable_stock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_stockMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtable_stock);
        if (jtable_stock.getColumnModel().getColumnCount() > 0) {
            jtable_stock.getColumnModel().getColumn(3).setMinWidth(250);
            jtable_stock.getColumnModel().getColumn(3).setPreferredWidth(250);
            jtable_stock.getColumnModel().getColumn(3).setMaxWidth(250);
            jtable_stock.getColumnModel().getColumn(6).setMinWidth(200);
            jtable_stock.getColumnModel().getColumn(6).setPreferredWidth(200);
            jtable_stock.getColumnModel().getColumn(6).setMaxWidth(200);
            jtable_stock.getColumnModel().getColumn(7).setMinWidth(100);
            jtable_stock.getColumnModel().getColumn(7).setPreferredWidth(100);
            jtable_stock.getColumnModel().getColumn(7).setMaxWidth(100);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 470, 1260, 280);

        jList_item_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_item_nameKeyPressed(evt);
            }
        });
        jScrollPane_item_name.setViewportView(jList_item_name);

        getContentPane().add(jScrollPane_item_name);
        jScrollPane_item_name.setBounds(120, 220, 260, 131);

        tx_stock_item_id.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_item_id.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_item_id.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_item_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_item_idActionPerformed(evt);
            }
        });
        tx_stock_item_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_item_idKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_item_id);
        tx_stock_item_id.setBounds(120, 240, 260, 35);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("item ID");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 250, 110, 25);

        tx_stock_supplier_id.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_supplier_id.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_supplier_id.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_supplier_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_supplier_idActionPerformed(evt);
            }
        });
        tx_stock_supplier_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_supplier_idKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_supplier_id);
        tx_stock_supplier_id.setBounds(600, 140, 270, 35);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Supplier ID");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(430, 150, 140, 25);

        tx_stock_item_description.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_item_description.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_item_description.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_item_description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_item_descriptionActionPerformed(evt);
            }
        });
        tx_stock_item_description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_item_descriptionKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_item_description);
        tx_stock_item_description.setBounds(120, 290, 260, 35);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("item Description");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 300, 110, 25);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Supplier Name");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(430, 200, 140, 25);

        tx_stock_supplier_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_supplier_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_supplier_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_supplier_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_supplier_nameActionPerformed(evt);
            }
        });
        tx_stock_supplier_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_supplier_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_supplier_name);
        tx_stock_supplier_name.setBounds(600, 190, 270, 35);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Supplier Contact Number");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(430, 250, 160, 25);

        tx_stock_supplier_contact_number.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_supplier_contact_number.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_supplier_contact_number.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_supplier_contact_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_supplier_contact_numberActionPerformed(evt);
            }
        });
        tx_stock_supplier_contact_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_supplier_contact_numberKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_supplier_contact_number);
        tx_stock_supplier_contact_number.setBounds(600, 240, 270, 35);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Buying Price");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(930, 150, 100, 25);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Sell Price");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(930, 200, 100, 25);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("QTY");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(930, 250, 120, 25);

        tx_stock_qty.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_qty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_qty.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_qtyActionPerformed(evt);
            }
        });
        tx_stock_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_qtyKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_qty);
        tx_stock_qty.setBounds(1050, 240, 260, 35);

        tx_stock_sell_price.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_sell_price.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_sell_price.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_sell_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_sell_priceActionPerformed(evt);
            }
        });
        getContentPane().add(tx_stock_sell_price);
        tx_stock_sell_price.setBounds(1050, 190, 260, 35);

        tx_stock_buying_price.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_buying_price.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_buying_price.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_buying_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_buying_priceActionPerformed(evt);
            }
        });
        tx_stock_buying_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_buying_priceKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_buying_price);
        tx_stock_buying_price.setBounds(1050, 140, 260, 35);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(270, 380, 10, 30);

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator7);
        jSeparator7.setBounds(405, 70, 10, 280);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Is Available");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(930, 300, 120, 25);

        tx_stock_is_active.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_is_active.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_is_active.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_is_active.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_is_activeActionPerformed(evt);
            }
        });
        tx_stock_is_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_is_activeKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_is_active);
        tx_stock_is_active.setBounds(1050, 290, 260, 35);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Supplier ID");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(10, 150, 100, 25);

        tx_stock_stock_id.setBackground(new java.awt.Color(255, 255, 255));
        tx_stock_stock_id.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tx_stock_stock_id.setForeground(new java.awt.Color(0, 0, 0));
        tx_stock_stock_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_stock_stock_idActionPerformed(evt);
            }
        });
        tx_stock_stock_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_stock_stock_idKeyPressed(evt);
            }
        });
        getContentPane().add(tx_stock_stock_id);
        tx_stock_stock_id.setBounds(120, 140, 260, 35);

        item_b_new.setBackground(new java.awt.Color(255, 255, 255));
        item_b_new.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        item_b_new.setForeground(new java.awt.Color(0, 0, 0));
        item_b_new.setText("New");
        item_b_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_b_newMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_b_newMouseEntered(evt);
            }
        });
        item_b_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_b_newActionPerformed(evt);
            }
        });
        getContentPane().add(item_b_new);
        item_b_new.setBounds(620, 380, 180, 45);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-10, 40, 1360, 730);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator8);
        jSeparator8.setBounds(570, 380, 10, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tx_stock_item_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_item_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_item_nameActionPerformed

    private void tx_stock_item_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_item_nameKeyPressed
        
            TXValidaton(evt, tx_stock_item_name, 50, "A");

            if (evt.getKeyCode() == 10) {
                if (!tx_stock_item_name.getText().isEmpty()) {
                    stock_b_search.grabFocus();
                    stock_b_search.doClick();
                } else {
                    tx_stock_item_name.grabFocus();
                }
            }

            if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
                jList_item_name.grabFocus();
                jList_item_name.setSelectedIndex(0);
                jScrollPane_item_name.setVisible(true);
            } else if (!(tx_stock_item_name.getText().trim().isEmpty())) {
                searchANDListItem("item", "name", tx_stock_item_name.getText(), jList_item_name);
            }
        
    }//GEN-LAST:event_tx_stock_item_nameKeyPressed

    private void stock_b_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock_b_searchMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_b_searchMouseClicked

    private void stock_b_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock_b_searchMouseEntered
        buttonMouseEnEx(stock_b_search, 0);
    }//GEN-LAST:event_stock_b_searchMouseEntered

    private void stock_b_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock_b_searchMouseExited
        buttonMouseEnEx(stock_b_search, 1);
    }//GEN-LAST:event_stock_b_searchMouseExited

    private void stock_b_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_b_searchActionPerformed
        if (!tx_stock_item_name.getText().trim().isEmpty()) {
            NameSearchStockTotable(itemI);
        } else {
            tx_stock_item_name.grabFocus();
        }
        stock_b_search.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_stock_b_searchActionPerformed

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        login_la_mini.setBackground(Color.gray);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        login_la_mini.setBackground(new Color(102, 204, 255));
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        login_la_cloce.setBackground(Color.red);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        login_la_cloce.setBackground(new Color(102, 204, 255));
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void jtable_stockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_stockMouseClicked
        DefaultTableModel tlModel = (DefaultTableModel) jtable_stock.getModel();
        String stockID  = tlModel.getValueAt(jtable_stock.getSelectedRow(),0).toString();
        String itemID = tlModel.getValueAt(jtable_stock.getSelectedRow(), 1).toString();
        String itemName = tlModel.getValueAt(jtable_stock.getSelectedRow(), 2).toString();
        String description = tlModel.getValueAt(jtable_stock.getSelectedRow(), 3).toString();
        String supplierid = tlModel.getValueAt(jtable_stock.getSelectedRow(), 4).toString();
        String supplierName = tlModel.getValueAt(jtable_stock.getSelectedRow(), 5).toString();
        String supplierContactNUmber  = tlModel.getValueAt(jtable_stock.getSelectedRow(),6).toString();
        String qty = tlModel.getValueAt(jtable_stock.getSelectedRow(), 7).toString();
        String buyingPrice = tlModel.getValueAt(jtable_stock.getSelectedRow(), 8).toString();
        String sellPrice = tlModel.getValueAt(jtable_stock.getSelectedRow(), 9).toString();
        String isactive = tlModel.getValueAt(jtable_stock.getSelectedRow(), 10).toString();
        
        tx_stock_stock_id.setText(stockID);
        tx_stock_item_id.setText(itemID);
        tx_stock_item_name.setText(itemName);
        tx_stock_item_description.setText(description);
        tx_stock_supplier_id.setText(supplierid);
        tx_stock_supplier_name.setText(supplierName);
        tx_stock_supplier_contact_number.setText(supplierContactNUmber);
        tx_stock_qty.setText(qty);
        tx_stock_buying_price.setText(buyingPrice);
        tx_stock_sell_price.setText(sellPrice);
        tx_stock_is_active.setText(isactive);
        
        
        
    }//GEN-LAST:event_jtable_stockMouseClicked

    private void jList_item_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_item_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList_item_name.isSelectionEmpty()) {
                tx_stock_item_name.setText(jList_item_name.getSelectedValue().toString().split("-")[1]);
                itemI = jList_item_name.getSelectedValue().toString().split("-")[0];
                jScrollPane_item_name.setVisible(false);
                stock_b_search.grabFocus();
                stock_b_search.doClick();
            }
        }
    }//GEN-LAST:event_jList_item_nameKeyPressed

    private void tx_stock_item_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_item_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_item_idActionPerformed

    private void tx_stock_item_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_item_idKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_item_idKeyPressed

    private void tx_stock_supplier_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_supplier_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_supplier_idActionPerformed

    private void tx_stock_supplier_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_supplier_idKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_supplier_idKeyPressed

    private void tx_stock_item_descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_item_descriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_item_descriptionActionPerformed

    private void tx_stock_item_descriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_item_descriptionKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_item_descriptionKeyPressed

    private void tx_stock_supplier_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_supplier_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_supplier_nameActionPerformed

    private void tx_stock_supplier_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_supplier_nameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_supplier_nameKeyPressed

    private void tx_stock_supplier_contact_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_supplier_contact_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_supplier_contact_numberActionPerformed

    private void tx_stock_supplier_contact_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_supplier_contact_numberKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_supplier_contact_numberKeyPressed

    private void tx_stock_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_qtyActionPerformed

    private void tx_stock_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_qtyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_qtyKeyPressed

    private void tx_stock_sell_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_sell_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_sell_priceActionPerformed

    private void tx_stock_buying_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_buying_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_buying_priceActionPerformed

    private void tx_stock_buying_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_buying_priceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_buying_priceKeyPressed

    private void tx_stock_is_activeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_is_activeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_is_activeActionPerformed

    private void tx_stock_is_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_is_activeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_is_activeKeyPressed

    private void tx_stock_stock_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_stock_stock_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_stock_idActionPerformed

    private void tx_stock_stock_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_stock_stock_idKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_stock_stock_idKeyPressed

    private void item_b_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_b_newMouseEntered
        buttonMouseEnEx(item_b_new, 0);
    }//GEN-LAST:event_item_b_newMouseEntered

    private void item_b_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_b_newMouseExited
        buttonMouseEnEx(item_b_new, 1);
    }//GEN-LAST:event_item_b_newMouseExited

    private void item_b_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_b_newActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want add new Supplier ?", "Add New One", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearMethod();
            tx_stock_item_name.grabFocus();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
        item_b_new.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_item_b_newActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton item_b_new;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JList jList_item_name;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_item_name;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jtable_stock;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JButton stock_b_search;
    private javax.swing.JTextField tx_stock_buying_price;
    private javax.swing.JTextField tx_stock_is_active;
    private javax.swing.JTextField tx_stock_item_description;
    private javax.swing.JTextField tx_stock_item_id;
    private javax.swing.JTextField tx_stock_item_name;
    private javax.swing.JTextField tx_stock_qty;
    private javax.swing.JTextField tx_stock_sell_price;
    private javax.swing.JTextField tx_stock_stock_id;
    private javax.swing.JTextField tx_stock_supplier_contact_number;
    private javax.swing.JTextField tx_stock_supplier_id;
    private javax.swing.JTextField tx_stock_supplier_name;
    // End of variables declaration//GEN-END:variables


//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static stock log = new stock();

    public static stock getLoginInstance() {
        return log;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
 
    
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System open <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close Employee Interface ?", "Exit Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(255, 255, 255));
        }
    }
    //>>>>>>>>> System close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
    
    
    

    private void SearchStockTotable() {
        try {
            ResultSet rs = DBClass.getData("select st.idstock,st.iditem as stockIdItem,st.buying_price,st.sell_price,st.qty"
                    + ",it.iditem,it.idsupplier as itemIdSuppier,it.name,it.description,it.status "
                    + "from stock st inner join item it on st.iditem = it.iditem  order by idstock ");
            DefaultTableModel dm = (DefaultTableModel) jtable_stock.getModel();
            dm.setRowCount(0);
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                        v.add(rs.getString("idstock"));
                        v.add(rs.getString("stockIdItem"));
                        v.add(rs.getString("name"));
                        v.add(rs.getString("description"));
                        v.add(rs.getString("itemIdSuppier"));
                        int idsu = rs.getInt("itemIdSuppier");
            ResultSet rs2 = DBClass.getData("select * from supplier where idsupplier ='"+idsu+"'");            
                   if(rs2.next()){
                      v.add(rs2.getString("name"));
                      v.add(rs2.getString("tell")); 
                   }
                        v.add(rs.getString("qty"));
                        v.add(rs.getString("buying_price"));
                        v.add(rs.getString("sell_price"));
                        if(rs.getString("status").equals("Active")){
                            v.add("Active");
                        }else{
                            v.add("Inactive");
                        }
                        dm.addRow(v);
                }
            }

        } catch (SQLException sqle) {
           // sqle.printStackTrace();
            JOptionPane.showMessageDialog(this, "\n Item Table Error ::\n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "\n Item Table Error ::\n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }


    
     private void NameSearchStockTotable(String nameI) {
        try {
            ResultSet rs = DBClass.getData("select st.idstock,st.iditem as stockIdItem,st.buying_price,st.sell_price,st.qty"
                    + ",it.iditem,it.idsupplier as itemIdSuppier,it.name,it.description,it.status "
                    + "from stock st inner join item it on st.iditem = it.iditem where st.iditem='"+nameI+"' order by idstock ");
            DefaultTableModel dm = (DefaultTableModel) jtable_stock.getModel();
            dm.setRowCount(0);
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                        v.add(rs.getString("idstock"));
                        v.add(rs.getString("stockIdItem"));
                        v.add(rs.getString("name"));
                        v.add(rs.getString("description"));
                        v.add(rs.getString("itemIdSuppier"));
                        int idsu = rs.getInt("itemIdSuppier");
            ResultSet rs2 = DBClass.getData("select * from supplier where idsupplier ='"+idsu+"'");            
                   if(rs2.next()){
                      v.add(rs2.getString("name"));
                      v.add(rs2.getString("tell")); 
                   }
                        v.add(rs.getString("qty"));
                        v.add(rs.getString("buying_price"));
                        v.add(rs.getString("sell_price"));
                        if(rs.getString("status").equals("Active")){
                            v.add("Active");
                        }else{
                            v.add("Inactive");
                        }
                        dm.addRow(v);
                }
            }

        } catch (SQLException sqle) {
          //  sqle.printStackTrace();
            JOptionPane.showMessageDialog(this, "\n Item Table Error ::\n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "\n Item Table Error ::\n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }


    public void clearMethod(){
        tx_stock_stock_id.setText(null);
        tx_stock_item_id.setText(null);
        tx_stock_item_name.setText(null);
        tx_stock_item_description.setText(null);
        tx_stock_supplier_id.setText(null);
        tx_stock_supplier_name.setText(null);
        tx_stock_supplier_contact_number.setText(null);
        tx_stock_qty.setText(null);
        tx_stock_buying_price.setText(null);
        tx_stock_sell_price.setText(null);
        tx_stock_is_active.setText(null);
        SearchStockTotable();
        itemI = null;
        tx_stock_item_name.grabFocus();
    }
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> buttonMouseEnEx()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> JButton buttonName, int x
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> buttonMouseEnEx open <<<<<<<<<<<    
    private void buttonMouseEnEx(JButton buttonName, int x) {
        if (x == 0) {
            buttonName.setBackground(new Color(84, 245, 214));
        } else {
            buttonName.setBackground(new Color(225, 225, 225));
        }
    }
    //>>>>>>>>> buttonMouseEnEx close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> TXValidaton()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt//JTextField txName//int lenth//String type
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> TXValidaton open <<<<<<<<<<<   
    private void TXValidaton(KeyEvent evt, JTextField txName, int lenth, String type) {
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenth) {
            if (type.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8) | (iNumber == 17) | (iNumber == 86)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (type.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46) | (iNumber == 17)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (type.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> TXValidaton close <<<<<<<<<<<       
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    

    
    
    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> searchANDListItem()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> String item, String name, String text, JList jList_name
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> searchANDListItem open <<<<<<<<<<<        
    private void searchANDListItem(String item, String name, String text, JList jList_name) {
        try {
            DBClass.getData("select iditem," + name + " from " + item + " where " + name + " like '" + text + "%' order by " + name);
            Vector v = new Vector();
            jList_name.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    
                    v.add(DBClass.r.getString("iditem")+"-"+DBClass.r.getString("name"));
                    jList_name.setListData(v);
                }
            } else {
                jList_name.setListData(v);
            }
        } catch (SQLException sqle) {
           // sqle.printStackTrace();
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> searchANDListItem close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

    
}
