/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com_jFream;

import com_class.DBClass;
import com_class.Universal;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class invoice extends javax.swing.JFrame {

    static Universal u = new Universal();
    public static String itemI;
    public static boolean list_b;

    /**
     * Creates new form invoice
     */
    public invoice() {
        initComponents();
        dateTime(la_date, la_time);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jScrollPane_item_name.setVisible(false);
        jScrollPane_customer_name.setVisible(false);
       // u.imageMethod("/img/2222.jpg", jLabel1);
         u.imageMethod("/img/hjk.png", jLabel1);
        clearMethod();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        jScrollPane_item_name = new javax.swing.JScrollPane();
        jList_item_name = new javax.swing.JList();
        tx_invoice_qty = new javax.swing.JTextField();
        tx_invoice_available = new javax.swing.JLabel();
        tx_invoice_discount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tx_invoice_balance = new javax.swing.JLabel();
        tx_invoice_total = new javax.swing.JLabel();
        tx_Item_name1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_item = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        la_date = new javax.swing.JLabel();
        la_time = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        invoice_b_enter = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        grn_b_new = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane_customer_name = new javax.swing.JScrollPane();
        jList_invoice_customer_name = new javax.swing.JList();
        tx_invoice_customer_name = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        grn_b_new1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        tx_invoice_payment = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        tx_invoice_netTotal = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tx_invoice_sell_price = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1376, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1376, 768));
        getContentPane().setLayout(null);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("QTY");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(30, 310, 70, 25);

        login_la_mini.setBackground(new java.awt.Color(102, 204, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.setText("-");
        login_la_mini.setOpaque(true);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1300, 5, 30, 30);

        login_la_cloce.setBackground(new java.awt.Color(102, 204, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.setText("X");
        login_la_cloce.setOpaque(true);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 5, 30, 30);

        jList_item_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_item_nameKeyPressed(evt);
            }
        });
        jScrollPane_item_name.setViewportView(jList_item_name);

        getContentPane().add(jScrollPane_item_name);
        jScrollPane_item_name.setBounds(140, 170, 280, 120);

        tx_invoice_qty.setBackground(new java.awt.Color(255, 255, 255));
        tx_invoice_qty.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_qty.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_invoice_qtyActionPerformed(evt);
            }
        });
        tx_invoice_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_invoice_qtyKeyPressed(evt);
            }
        });
        getContentPane().add(tx_invoice_qty);
        tx_invoice_qty.setBounds(140, 310, 280, 35);

        tx_invoice_available.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_available.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_available.setText("Sell Price");
        getContentPane().add(tx_invoice_available);
        tx_invoice_available.setBounds(140, 250, 280, 35);

        tx_invoice_discount.setBackground(new java.awt.Color(255, 255, 255));
        tx_invoice_discount.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_discount.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_discount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_invoice_discountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_invoice_discountFocusLost(evt);
            }
        });
        tx_invoice_discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_invoice_discountActionPerformed(evt);
            }
        });
        tx_invoice_discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_invoice_discountKeyPressed(evt);
            }
        });
        getContentPane().add(tx_invoice_discount);
        tx_invoice_discount.setBounds(1100, 130, 170, 35);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Discount");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(1010, 130, 80, 25);

        tx_invoice_balance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_balance.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_balance.setText("Total");
        getContentPane().add(tx_invoice_balance);
        tx_invoice_balance.setBounds(1100, 310, 170, 35);

        tx_invoice_total.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_total.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_total.setText("Total");
        getContentPane().add(tx_invoice_total);
        tx_invoice_total.setBounds(1100, 70, 170, 35);

        tx_Item_name1.setBackground(new java.awt.Color(255, 255, 255));
        tx_Item_name1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_Item_name1.setForeground(new java.awt.Color(0, 0, 0));
        tx_Item_name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_Item_name1ActionPerformed(evt);
            }
        });
        tx_Item_name1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_Item_name1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_Item_name1KeyReleased(evt);
            }
        });
        getContentPane().add(tx_Item_name1);
        tx_Item_name1.setBounds(140, 130, 280, 35);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Item Name");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(30, 130, 110, 25);

        jtable_item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Sell Price", "QTY", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable_item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_itemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtable_item);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(430, 460, 550, 270);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 370, 1360, 10);

        la_date.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_date.setForeground(new java.awt.Color(0, 0, 0));
        la_date.setText("D");
        getContentPane().add(la_date);
        la_date.setBounds(130, 10, 120, 22);

        la_time.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_time.setForeground(new java.awt.Color(0, 0, 0));
        la_time.setText("T");
        getContentPane().add(la_time);
        la_time.setBounds(10, 10, 120, 22);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(940, 80, 10, 280);

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator9);
        jSeparator9.setBounds(480, 90, 10, 270);

        invoice_b_enter.setBackground(new java.awt.Color(255, 255, 255));
        invoice_b_enter.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        invoice_b_enter.setForeground(new java.awt.Color(0, 0, 0));
        invoice_b_enter.setText("Print");
        invoice_b_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                invoice_b_enterMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                invoice_b_enterMouseEntered(evt);
            }
        });
        invoice_b_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoice_b_enterActionPerformed(evt);
            }
        });
        getContentPane().add(invoice_b_enter);
        invoice_b_enter.setBounds(490, 390, 180, 45);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(710, 390, 10, 30);

        grn_b_new.setBackground(new java.awt.Color(255, 255, 255));
        grn_b_new.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        grn_b_new.setForeground(new java.awt.Color(0, 0, 0));
        grn_b_new.setText("New");
        grn_b_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grn_b_newMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grn_b_newMouseEntered(evt);
            }
        });
        grn_b_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_b_newActionPerformed(evt);
            }
        });
        getContentPane().add(grn_b_new);
        grn_b_new.setBounds(750, 390, 180, 45);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(960, 390, 10, 30);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(450, 390, 10, 30);

        jLabel2.setBackground(new java.awt.Color(102, 204, 255));
        jLabel2.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("INVOICE");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1380, 40);

        jList_invoice_customer_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_invoice_customer_nameKeyPressed(evt);
            }
        });
        jScrollPane_customer_name.setViewportView(jList_invoice_customer_name);

        getContentPane().add(jScrollPane_customer_name);
        jScrollPane_customer_name.setBounds(660, 170, 220, 120);

        tx_invoice_customer_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_invoice_customer_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_customer_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_customer_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_invoice_customer_nameActionPerformed(evt);
            }
        });
        tx_invoice_customer_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_invoice_customer_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_invoice_customer_nameKeyReleased(evt);
            }
        });
        getContentPane().add(tx_invoice_customer_name);
        tx_invoice_customer_name.setBounds(660, 130, 220, 35);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Available");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(30, 250, 100, 25);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Customer ID");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(540, 130, 110, 25);

        grn_b_new1.setBackground(new java.awt.Color(255, 255, 255));
        grn_b_new1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        grn_b_new1.setForeground(new java.awt.Color(0, 0, 0));
        grn_b_new1.setText("ADD Customer");
        grn_b_new1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grn_b_new1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grn_b_new1MouseEntered(evt);
            }
        });
        grn_b_new1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_b_new1ActionPerformed(evt);
            }
        });
        getContentPane().add(grn_b_new1);
        grn_b_new1.setBounds(660, 190, 220, 45);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Net Total");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(1010, 190, 80, 25);

        tx_invoice_payment.setBackground(new java.awt.Color(255, 255, 255));
        tx_invoice_payment.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_payment.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_payment.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_invoice_paymentFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_invoice_paymentFocusLost(evt);
            }
        });
        tx_invoice_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_invoice_paymentActionPerformed(evt);
            }
        });
        tx_invoice_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_invoice_paymentKeyPressed(evt);
            }
        });
        getContentPane().add(tx_invoice_payment);
        tx_invoice_payment.setBounds(1100, 250, 170, 35);

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Payment");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(1010, 250, 80, 25);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Balance");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(1010, 310, 80, 25);

        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Total");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(1010, 70, 70, 25);

        tx_invoice_netTotal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_netTotal.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_netTotal.setText("Total");
        getContentPane().add(tx_invoice_netTotal);
        tx_invoice_netTotal.setBounds(1100, 190, 170, 35);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Sell Price");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(30, 190, 90, 25);

        tx_invoice_sell_price.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoice_sell_price.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoice_sell_price.setText("Sell Price");
        getContentPane().add(tx_invoice_sell_price);
        tx_invoice_sell_price.setBounds(140, 190, 280, 35);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 40, 1400, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tx_invoice_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_invoice_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_invoice_qtyActionPerformed

    private void tx_invoice_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_invoice_qtyKeyPressed
        TXValidaton(evt, tx_invoice_qty, 5, "N");
        if (evt.getKeyCode() == 10) {
            if (!tx_invoice_qty.getText().trim().isEmpty()) {
                if (Double.parseDouble(tx_invoice_available.getText()) >= Double.parseDouble(tx_invoice_qty.getText())) {
                    setTotal(Double.parseDouble(tx_invoice_sell_price.getText()), Double.parseDouble(tx_invoice_qty.getText()), itemI, tx_Item_name1.getText());//(double sell_p, double qty, String item_i, String name_i) ;
                    tx_Item_name1.setText(null);
                    tx_invoice_sell_price.setText(null);
                    tx_invoice_available.setText(null);
                    tx_invoice_qty.setText(null);
                    tx_Item_name1.grabFocus();
                    jScrollPane_item_name.setVisible(false);
                } else {
                    tx_invoice_qty.grabFocus();
                    JOptionPane.showMessageDialog(this, "Not enough stocks available ::\n", "Error Massage", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tx_invoice_qtyKeyPressed

    private void tx_invoice_discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_invoice_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_invoice_discountActionPerformed

    private void tx_invoice_discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_invoice_discountKeyPressed
        TXValidaton(evt, tx_invoice_discount, 2, "N");
        if (!tx_invoice_discount.getText().trim().isEmpty()) {
            if (evt.getKeyCode() == 10) {
                tx_invoice_netTotal.setText("" + (Double.parseDouble(tx_invoice_total.getText())
                        - (Double.parseDouble(tx_invoice_total.getText()) * Double.parseDouble(tx_invoice_discount.getText()) / 100)));
                tx_invoice_payment.grabFocus();
            }
        } else {
            tx_invoice_discount.grabFocus();
        }
    }//GEN-LAST:event_tx_invoice_discountKeyPressed

    private void tx_Item_name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_Item_name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_Item_name1ActionPerformed

    private void tx_Item_name1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_Item_name1KeyPressed


    }//GEN-LAST:event_tx_Item_name1KeyPressed

    private void jList_item_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_item_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList_item_name.isSelectionEmpty()) {
                tx_Item_name1.setText(jList_item_name.getSelectedValue().toString().split("-")[1]);
                jScrollPane_item_name.setVisible(false);
                itemI = jList_item_name.getSelectedValue().toString().split("-")[0];
                searchItemFromStock(itemI);
                list_b = true;
                tx_invoice_qty.grabFocus();
            }
        }
    }//GEN-LAST:event_jList_item_nameKeyPressed

    private void jtable_itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_itemMouseClicked

    }//GEN-LAST:event_jtable_itemMouseClicked

    private void invoice_b_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoice_b_enterMouseExited
        buttonMouseEnEx(invoice_b_enter, 1);
    }//GEN-LAST:event_invoice_b_enterMouseExited

    private void invoice_b_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoice_b_enterMouseEntered
        buttonMouseEnEx(invoice_b_enter, 0);
    }//GEN-LAST:event_invoice_b_enterMouseEntered

    private void invoice_b_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoice_b_enterActionPerformed
        if (tx_invoice_netTotal.getText().trim().equals("0.0")) {
            tx_invoice_netTotal.grabFocus();
        } else if (tx_invoice_payment.getText().trim().equals("0.0")) {
            tx_invoice_payment.grabFocus();
        } else if (!(tx_invoice_sell_price.getText().trim().equals("0.0") & tx_invoice_payment.getText().trim().equals("0.0"))) {
            addToTable();
        }
        invoice_b_enter.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_invoice_b_enterActionPerformed

    private void grn_b_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_b_newMouseExited
        buttonMouseEnEx(grn_b_new, 1);
    }//GEN-LAST:event_grn_b_newMouseExited

    private void grn_b_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_b_newMouseEntered
        buttonMouseEnEx(grn_b_new, 0);
    }//GEN-LAST:event_grn_b_newMouseEntered

    private void grn_b_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_b_newActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want add new Invoice ?", "Add New One", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearMethod();
            tx_Item_name1.grabFocus();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
        grn_b_new.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_grn_b_newActionPerformed

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        login_la_mini.setBackground(new Color(102, 204, 255));
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        login_la_mini.setBackground(Color.gray);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        login_la_cloce.setBackground(new Color(102, 204, 255));
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        login_la_cloce.setBackground(Color.red);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void grn_b_new1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_b_new1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_b_new1MouseExited

    private void grn_b_new1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_b_new1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_b_new1MouseEntered

    private void grn_b_new1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_b_new1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_b_new1ActionPerformed

    private void jList_invoice_customer_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_invoice_customer_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList_invoice_customer_name.isSelectionEmpty()) {
                tx_invoice_customer_name.setText(jList_item_name.getSelectedValue().toString());
                jScrollPane_item_name.setVisible(false);
                list_b = true;
                tx_invoice_discount.grabFocus();
            }
        }
    }//GEN-LAST:event_jList_invoice_customer_nameKeyPressed

    private void tx_invoice_customer_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_invoice_customer_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_invoice_customer_nameActionPerformed

    private void tx_invoice_customer_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_invoice_customer_nameKeyPressed

    }//GEN-LAST:event_tx_invoice_customer_nameKeyPressed

    private void tx_invoice_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_invoice_paymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_invoice_paymentActionPerformed

    private void tx_invoice_paymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_invoice_paymentKeyPressed
        TXValidaton(evt, tx_invoice_payment, 5, "N");
        if (!tx_invoice_payment.getText().trim().isEmpty() & (Double.parseDouble(tx_invoice_netTotal.getText()) <= Double.parseDouble(tx_invoice_payment.getText()))) {
            if (evt.getKeyCode() == 10) {
                tx_invoice_balance.setText("" + (Double.parseDouble(tx_invoice_payment.getText())
                        - (Double.parseDouble(tx_invoice_netTotal.getText()))));
                invoice_b_enter.grabFocus();
            }
        } else {
            tx_invoice_payment.grabFocus();
        }
    }//GEN-LAST:event_tx_invoice_paymentKeyPressed

    private void tx_invoice_discountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_invoice_discountFocusGained
        if (tx_invoice_discount.getText().trim().equals("0%")) {
            tx_invoice_discount.setText("");
        }
    }//GEN-LAST:event_tx_invoice_discountFocusGained

    private void tx_invoice_discountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_invoice_discountFocusLost
        if (tx_invoice_discount.getText().trim().equals("")) {
            tx_invoice_discount.setText("0%");
        }
    }//GEN-LAST:event_tx_invoice_discountFocusLost

    private void tx_Item_name1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_Item_name1KeyReleased
        TXValidaton(evt, tx_Item_name1, 50, "NA");
        jScrollPane_item_name.setVisible(true);
        if (evt.getKeyCode() == 10) {
            if (!tx_Item_name1.getText().isEmpty() & list_b == true) {
                tx_invoice_qty.grabFocus();
            } else {
                tx_Item_name1.grabFocus();
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList_item_name.grabFocus();
            jList_item_name.setSelectedIndex(0);

        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jList_invoice_customer_name.grabFocus();
            jList_invoice_customer_name.setSelectedIndex(0);
            jScrollPane_customer_name.setVisible(true);
        } else if (!(tx_Item_name1.getText().trim().isEmpty())) {
            searchANDListItem("item", "name", tx_Item_name1.getText(), jList_item_name);
        }

    }//GEN-LAST:event_tx_Item_name1KeyReleased

    private void tx_invoice_customer_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_invoice_customer_nameKeyReleased
        TXValidaton(evt, tx_invoice_customer_name, 50, "N");
        jScrollPane_customer_name.setVisible(true);
        if (evt.getKeyCode() == 10) {
            if (!tx_invoice_customer_name.getText().isEmpty() & list_b == true) {
                tx_invoice_discount.grabFocus();
            } else {
                tx_invoice_customer_name.grabFocus();
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList_invoice_customer_name.grabFocus();
            jList_invoice_customer_name.setSelectedIndex(0);

        } else if (!(tx_Item_name1.getText().trim().isEmpty())) {
            searchANDListCustomer("customer", "name", tx_Item_name1.getText(), jList_invoice_customer_name);
        }

    }//GEN-LAST:event_tx_invoice_customer_nameKeyReleased

    private void tx_invoice_paymentFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_invoice_paymentFocusGained
        if (tx_invoice_discount.getText().trim().equals("0.0")) {
            tx_invoice_discount.setText("");
        }
    }//GEN-LAST:event_tx_invoice_paymentFocusGained

    private void tx_invoice_paymentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_invoice_paymentFocusLost
        if (tx_invoice_discount.getText().trim().equals("")) {
            tx_invoice_discount.setText("0.0");
        }
    }//GEN-LAST:event_tx_invoice_paymentFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton grn_b_new;
    private javax.swing.JButton grn_b_new1;
    private javax.swing.JButton invoice_b_enter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JList jList_invoice_customer_name;
    private javax.swing.JList jList_item_name;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_customer_name;
    private javax.swing.JScrollPane jScrollPane_item_name;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jtable_item;
    public static javax.swing.JLabel la_date;
    private javax.swing.JLabel la_time;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JTextField tx_Item_name1;
    private javax.swing.JLabel tx_invoice_available;
    private javax.swing.JLabel tx_invoice_balance;
    private javax.swing.JTextField tx_invoice_customer_name;
    private javax.swing.JTextField tx_invoice_discount;
    private javax.swing.JLabel tx_invoice_netTotal;
    private javax.swing.JTextField tx_invoice_payment;
    private javax.swing.JTextField tx_invoice_qty;
    private javax.swing.JLabel tx_invoice_sell_price;
    private javax.swing.JLabel tx_invoice_total;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static invoice log = new invoice();

    public static invoice getLoginInstance() {
        return log;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
    private static void dateTime(JLabel la_date, JLabel la_time) {
        new Thread(() -> {
            StringBuffer sb, sb2;
            sb2 = new StringBuffer(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
            la_date.setText("" + sb2);
            while (true) {
                sb = new StringBuffer(new SimpleDateFormat("HH:mm:ss").format(new Date()));
                la_time.setText("" + sb);
            }
        }).start();
    }

    public void clearMethod() {
        tx_Item_name1.setText(null);
        tx_invoice_available.setText(null);
        tx_invoice_balance.setText("0.0");
        tx_invoice_customer_name.setText(null);
        tx_invoice_discount.setText("0%");
        tx_invoice_netTotal.setText("0.0");
        tx_invoice_payment.setText("0.0");
        tx_invoice_qty.setText(null);
        tx_invoice_sell_price.setText(null);
        tx_invoice_total.setText("0.0");
        tx_invoice_sell_price.setText("0.0");
        tx_invoice_qty.setText("0");
        itemI = null;
        tx_Item_name1.grabFocus();
    }

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> buttonMouseEnEx()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> JButton buttonName, int x
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> buttonMouseEnEx open <<<<<<<<<<<    
    private void buttonMouseEnEx(JButton buttonName, int x) {
        if (x == 0) {
            buttonName.setBackground(new Color(84, 245, 214));
        } else {
            buttonName.setBackground(new Color(225, 225, 225));
        }
    }
    //>>>>>>>>> buttonMouseEnEx close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> TXValidaton()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt//JTextField txName//int lenth//String type
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> TXValidaton open <<<<<<<<<<<   
    private void TXValidaton(KeyEvent evt, JTextField txName, int lenth, String type) {
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenth) {
            if (type.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8) | (iNumber == 17) | (iNumber == 86)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (type.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46) | (iNumber == 17)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (type.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> TXValidaton close <<<<<<<<<<<       
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> searchANDListItem()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> String item, String name, String text, JList jList_name
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> searchANDListItem open <<<<<<<<<<<        
    private void searchANDListItem(String item, String name, String text, JList jList_name) {
        try {
            DBClass.getData("select iditem," + name + " from " + item + " where " + name + " like '" + text + "%' order by " + name);
            Vector v = new Vector();
            jList_name.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString("iditem") + "-" + DBClass.r.getString("name"));
                    jList_name.setListData(v);
                }
            } else {
                jList_name.setListData(v);
            }
        } catch (SQLException sqle) {
            // sqle.printStackTrace();
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> searchANDListItem close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> searchItemFromStock()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> 
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> searchItemFromStock open <<<<<<<<<<<        
    private void searchItemFromStock(String id) {
        try {
            ResultSet rs = DBClass.getData("select * from stock where iditem='" + id + "'");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    tx_invoice_sell_price.setText(rs.getString("sell_price"));
                    tx_invoice_available.setText(rs.getString("qty"));

                }
            }

        } catch (SQLException sqle) {
            //sqle.printStackTrace();
            JOptionPane.showMessageDialog(this, "Stock Table Error ::\n addTotableSearSupplier() \n" + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            //e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Stock Table Error ::\n addTotableSearSupplier() \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> searchItemFromStock close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System open <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close Employee Interface ?", "Exit Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(255, 255, 255));
        }
    }
    //>>>>>>>>> System close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
    private void setTotal(double sell_p, double qty, String item_i, String name_i) {
        tx_invoice_total.setText("" + (Double.parseDouble(tx_invoice_total.getText()) + sell_p * qty));
        DefaultTableModel deft = (DefaultTableModel) jtable_item.getModel();
        Vector v = new Vector();

        v.add(item_i);
        v.add(name_i);
        v.add(sell_p);
        int count = 0;
        boolean b = false;
        while (count < jtable_item.getRowCount()) {
            String itemId = (jtable_item.getValueAt(count, 0).toString());
            if (item_i.equals(itemId)) {
                double t_qty = Double.parseDouble(jtable_item.getValueAt(count, 2).toString());
                v.add(t_qty + qty);
                v.add((t_qty + qty) * sell_p);
                deft.removeRow(count);
                deft.addRow(v);
                b = true;
                break;
            }
            count++;
        }
        if (b == false) {
            v.add(qty);
            v.add(qty * sell_p);
            deft.addRow(v);
        }
    }

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> searchANDListItem()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> String item, String name, String text, JList jList_name
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> searchANDListItem open <<<<<<<<<<<        
    private void searchANDListCustomer(String customer, String idcustomer, String text, JList jList_custpmer_name) {
        try {
            DBClass.getData("select idcustomer from " + customer + " where " + idcustomer + " like '" + text + "%' order by " + idcustomer);
            Vector v = new Vector();
            jList_custpmer_name.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString("idcustomer"));
                    jList_custpmer_name.setListData(v);
                }
            } else {
                jList_custpmer_name.setListData(v);
            }
        } catch (SQLException sqle) {
            // sqle.printStackTrace();
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> searchANDListItem close <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\
    private void addToTable() {
        try {
            DBClass.putData("insert into invoice (idcustomer,date,time,total,discount,nettotal,payment) values("
                    + "'" + Integer.parseInt(tx_invoice_customer_name.getText()) + "','" + la_date.getText() + "','" + la_time.getText()
                    + "','" + Double.parseDouble(tx_invoice_total.getText()) + "' , '" + Double.parseDouble(tx_invoice_discount.getText())
                    + "','" + Double.parseDouble(tx_invoice_netTotal.getText()) + "' , '" + Double.parseDouble(tx_invoice_payment.getText())
                    + "')");
            int idinvoice = 0 ;
            ResultSet rs = DBClass.getData("select * from invoice");
            if (rs.last()) {
                idinvoice = rs.getInt("idinvice");
            }
            int count = 0;
            while (count < jtable_item.getRowCount()) {
                int itemId = Integer.parseInt(jtable_item.getValueAt(count, 0).toString());
                ResultSet rs2 = DBClass.getData("select * from stock where iditem = '" + itemId + "'");
                if (rs2.next()) {
                    int idstock = rs2.getInt("idstock");
                    double qtystock = rs2.getDouble("qty");

                    double qty = Double.parseDouble(jtable_item.getValueAt(count, 2).toString());
                    double unit_price = Double.parseDouble(jtable_item.getValueAt(count, 3).toString());
                    double total = Double.parseDouble(jtable_item.getValueAt(count, 4).toString());

                    DBClass.putData("update stock set qty='" + (qtystock - qty) + "' where  iditem ='" + idstock + "' ");

                    DBClass.putData("insert into invoice_item (idstock,idinvoice,qty,unit_price,total) values('" 
                            + idstock + "','" + idinvoice + "','"+ qty + "','" + unit_price + "' , '" + total + "')");

                }
                count++;
            }
            
        } catch (SQLException sqle) {
             sqle.printStackTrace();
            JOptionPane.showMessageDialog(null, "Bug Error insertDatabase \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error insertDatabase \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

}
